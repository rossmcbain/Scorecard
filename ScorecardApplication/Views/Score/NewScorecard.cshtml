@{
    ViewBag.Title = "New Scorecard";
}
@model ScorecardApplication.Models.ScorecardModel

@*<script src="~/Scripts/jquery-3.1.1.js"></script>
<script src="~/Scripts/bootstrap.js"></script>*@


@using (Html.BeginForm())
{
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="col-md-12">
           
             
                    <div class="row">
                        <div class="col-md-3">
                            @Html.LabelFor(m => m.scorecardname)
                            @Html.TextBoxFor(m => m.scorecardname, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.scorecardname)
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(m => m.passmark)
                            @Html.TextBoxFor(m => m.passmark, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.passmark)
                        </div>
                    </div>


                    <hr />
                    @for (int j = 0; j < Model.scorecardgroups.Count; j++)
                    {

                        string groupname = "group" + j.ToString();
                        string tablename = "table" + j.ToString();

                        string addstringpf = "m.scorecardgroups[" + j + "].addpf";
                        string addstringmc = "m.scorecardgroups[" + j + "].addmc";

                            <div id="@groupname">

                                <div class="row">
                                    <div class="col-md-3">
                                        @Html.LabelFor(m => m.scorecardgroups[j].groupname)
                                        @Html.TextBoxFor(m => m.scorecardgroups[j].groupname, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.scorecardgroups[j].groupname)
                                    </div>
                                    <div class="col-md-3">
                                        @Html.LabelFor(m => m.scorecardgroups[j].groupdescription)
                                        @Html.TextBoxFor(m => m.scorecardgroups[j].groupdescription, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.scorecardgroups[j].groupdescription)
                                    </div>
                                    <div class="col-md-3">
                                        @Html.LabelFor(m => m.scorecardgroups[j].pasmark)
                                        @Html.TextBoxFor(m => m.scorecardgroups[j].pasmark, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.scorecardgroups[j].pasmark)
                                    </div>
                                </div>

                                <br />


                               
                                <table id="@tablename" class="table">
                                    <thead>
                                        <tr>
                                            <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().question)</th>
                                            
                                            <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().questiontype)</th>
                                            <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().possibleanswers)</th>
                                            <th></th>
                                            <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().autofail)</th>
                                            <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().scoremodifier)</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.scorecardgroups[j].scorecarditems.Count; i++)
                                        {

                                            string deletestring = "m.scorecardgroups[" + j + "].scorecarditems[" + i + "].delete";
                                            string possiblestring = "m.scorecardgroups[" + j + "].scorecarditems[" + i + "].possibleanswers";
                                            string newitemmodal = "#AddItem_" + j + "_" + i;
                                            <tr>
                                                <td>
                                                    <input type="hidden" name="ScorecardItems.Index" value="@i">
                                                    @Html.TextBoxFor(m => m.scorecardgroups[j].scorecarditems[i].question, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.scorecardgroups[j].scorecarditems[i].question)
                                                </td>

                                                <td>
                                                    @Html.TextBoxFor(m => m.scorecardgroups[j].scorecarditems[i].questiontype, new { @class = "form-control",  @readonly = "true" })
                                                </td>
                                                <td>
                                                    @if (Model.scorecardgroups[j].scorecarditems[i].possibleanswerslist != null)
                                                    {
                                                        @Html.DropDownListFor(m => m.scorecardgroups[j].scorecarditems[i].answer, Model.scorecardgroups[j].scorecarditems[i].possibleanswerslist, new { @class = "form-control" })
                                                    }
                                                </td>
                                                    <td>
                                                        <button type="button" class="btn btn-info" data-toggle="modal" data-target="@newitemmodal">Add Item</button>
                                                    
                                                    <input type="hidden" name="@possiblestring"  value="@ViewData[$"m.scorecardgroups[{j}].scorecarditems[{i}].possibleanswers"]" />
                                                
                                                    </td>
                                                <td>
                                                  @Html.DropDownListFor(m => m.scorecardgroups[j].scorecarditems[i].autofail, ScorecardApplication.Models.ScorecardModel.AutoFailList, new { @class = "form-control" })
                                               
                                                </td>
                                                <td>
                                                    @Html.TextBoxFor(m => m.scorecardgroups[j].scorecarditems[i].scoremodifier, new { @class = "form-control" })
                                                    @Html.ValidationMessageFor(m => m.scorecardgroups[j].scorecarditems[i].scoremodifier)
                                                </td>
                                                <td>
                                                   
                                                    <input  type="submit" name="@deletestring" class="btn delete" value="Delete" />
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                @*<button type="button" id="@buttonname" class="btn" onclick="AddScoreCardRow(@buttonname)">Add Question</button>*@
                                <input type="submit" name="@addstringpf" class="btn" value="Add Pass/Fail Question" />
                                <input type="submit" name="@addstringmc" class="btn" value="Add M.C. Question" />
                            </div>
                            <br />

                   

                <hr />


                    }
                    <div class="row">
                        <div class="col-md-1">
                            <input type="submit" name="submit" class="btn" value="Add Group" />
                        </div>
                    </div>
                    <br/>
                    <div class="row">
                        <div class="col-md-1">
                            <input type="submit" name="submit" value="Save" class="btn" />
                        </div>
                    </div>


                  
      


            </div>
        </div>




    </div>



for (int j = 0; j < Model.scorecardgroups.Count; j++)
{

    for (int i = 0; i < Model.scorecardgroups[j].scorecarditems.Count; i++)
    {
        string newitemstring = "m.scorecardgroups[" + j + "].scorecarditems[" + i + "].newitem";
        string newitemvalue = "m.scorecardgroups[" + j + "].scorecarditems[" + i + "].itemvalue";
        string newitemmodal = "AddItem_" + j + "_" + i;

                                    <!-- Modal -->
        <div id="@newitemmodal" class="modal fade" role="dialog">
            <div class="modal-dialog">

                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">New Item</h4>
                    </div>
                    <div class="modal-body">
                        <input type="text" name="@newitemvalue" value="" class="form-control" />
                    </div>
                    <div class="modal-footer">
                        <input type="submit" name="@newitemstring" value="New Item" class="btn" />
                    </div>
                </div>

            </div>
        </div>

    }
}


          }@*Form End*@






    @*<table id="newrow" style="display:none;">
        <tr>
            <td>
                <input type="hidden" name="scorecardgroups[g#].scorecarditems.Index" value="%">
                <input class="form-control" data-val="true" data-val-required="You must enter a question." name="scorecardgroups[g#].scorecarditems[#].question" type="text" value="">
                <span class="field-validation-valid" data-valmsg-for="scorecardgroups[g#].scorecarditems[#].question" data-valmsg-replace="true"></span>
            </td>
            <td>
                <input class="form-control" data-val="true" data-val-required="You must enter an answer." name="scorecardgroups[g#].scorecarditems[#].answer" type="text" value="">
                <span class="field-validation-valid" data-valmsg-for="scorecardgroups[g#].scorecarditems[#].answer" data-valmsg-replace="true"></span>
            </td>
            @Model.comment
            <td>
                <select class="form-control" data-val="true"  name="scorecardgroups[g#].scorecarditems[#].questiontype" type="" value="">
                    @foreach (SelectListItem item in ScorecardApplication.Models.ScorecardModel.ScorecardQuestionTypeList)
                    {
                     <option>@item.Text</option>
                    }
                </select>
      
            </td>
            <td>
                <input class="form-control" data-val="true" data-val-required="You must enter possible answers." name="scorecardgroups[g#].scorecarditems[#].possibleanswers" type="text" value="">
                <span class="field-validation-valid" data-valmsg-for="scorecardgroups[g#].scorecarditems[#].possibleanswers" data-valmsg-replace="true"></span>
            </td>
            <td>
                <select class="form-control" data-val="true" name="scorecardgroups[g#].scorecarditems[#].autofail" type="" value="">

                        <option>Yes</option>
                    <option>No</option>
                </select>
            </td>
            <td>
                <input class="form-control" data-val="true"  name="scorecardgroups[g#].scorecarditems[#].scoremodifier" type="text" value="" checked="">
               
            </td>

            <td>
                <button type="button" class="btn delete">Delete</button>
            </td>
        </tr>
    </table>*@
@*<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
    <script src="//netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

    <script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>


    <script type="text/javascript">
            var form = $('form');
       // var table = $('#ScorecardItems tbody');
            var newrow= $('#newrow');

            $('#add').click(function () {
                var index = (new Date()).getTime();
                var clone = newrow.find('tr').clone();
                clone.html($(clone).html().replace(/\[#\]/g, '[' + index + ']'));
                clone.html($(clone).html().replace(/"%"/g, '"' + index + '"'));
                table.append(clone);
                //form.data('validator', null);
                //$.validator.unobtrusive.parse(form)
            });
    //        $('#ScorecardItems').on('click', '.delete', function() {
                //$(this).closest('tr').remove();
    //        });



            function AddScoreCardRow(e)
            {
                var groupindex = e.id.replace('add', '')
                var table = $('#table'+ groupindex +' tbody');
                var index = (new Date()).getTime();
                var clone = newrow.find('tr').clone();
                clone.html($(clone).html().replace(/\[#\]/g, '[' + index + ']'));
                clone.html($(clone).html().replace(/\[g#\]/g, '[' + groupindex + ']'));
                clone.html($(clone).html().replace(/"%"/g, '"' + index + '"'));
                table.append(clone);
                form.data('validator', null);
                $.validator.unobtrusive.parse(form)

            }

    </script>*@






