@{
    ViewBag.Title = "Score";
}
@model ScorecardApplication.Models.ScorecardModel

@{ 
    //List<string> ScorecardTemplate = ViewData["ScorecardList"] as List<string>;
    //String filepath = ViewData["RecordingPath"] as String; 
}


@using (Html.BeginForm())
{ 
    <div class="panel panel-default">
        <div class="panel-body">
            <div class="col-md-12">

              @if (Model.scorecardid == 0)
              {
                <div class="row">
                    <div class="col-md-3">

                        @Html.LabelFor(m => m.scorecardname)
                        @Html.DropDownListFor(m => m.scorecardid, Model.ScorecardList, new { @class = "form-control" })

                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(m => m.callreference)
                        @Html.TextBoxFor(m => m.callreference, new { @class = "form-control" })

                    </div>
                    <div class="col-md-3">

                        @Html.LabelFor(m => m.UserList)
                        @Html.DropDownListFor(m => m.agentscored.userid, Model.UserList, new { @class = "form-control" })

                    </div>
                </div>
                    <div class="row">
                        <div class="col-md-3">
                            <label for="scorecarddescription">Scorecard Description:</label>
                            <input id="scorecarddescription" type="text" class="form-control" readonly>
                            <input type="submit" name="submit" class="btn" value="Load" />
                        </div>
                    </div>

              }
              else
              {
                  @Html.HiddenFor(m => m.scorecardid);
              }
           @if (Model.scorecardname != null && Model.recording == null)
           {
                <div class="row">
                    <div class="col-md-3">

                        @Html.LabelFor(m => m.scorecardname)
                        @Html.TextBoxFor(m => m.scorecardname, new { @class = "form-control", @readonly = "true" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(m => m.callreference)
                        @Html.TextBoxFor(m => m.callreference, new { @class = "form-control", @readonly = "true" })
                    </div>

                </div>
                <div class="row">

                    <div class="col-md-3">
                        @Html.LabelFor(m => m.scorecarddescription)
                        @Html.TextBoxFor(m => m.scorecarddescription, new { @class = "form-control", @readonly = "true" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(m => m.recording)
                        @Html.DropDownListFor(m => m.recording, Model.Callrecordinglist, new { @class = "form-control" })
                        @*@Html.HiddenFor(m => m.recordingfilename)*@
                        <input type="submit" name="submit" class="btn" value="Load Call" />

                    </div>
                </div>
              }


    @if (Model.recordingfilename != null)
    {
     
        <div class="row">
            <div class="col-md-3">

                @Html.LabelFor(m => m.scorecardname)
                @Html.TextBoxFor(m => m.scorecardname, new { @class = "form-control",@readonly = "true" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.callreference)
                @Html.TextBoxFor(m => m.callreference, new { @class = "form-control", @readonly = "true" })

            </div>
        </div>
                <div class="row">

                    <div class="col-md-3">
                        @Html.LabelFor(m => m.scorecarddescription)
                        @Html.TextBoxFor(m => m.scorecarddescription, new { @class = "form-control", @readonly = "true" })
                    </div>

                </div>
                <div class="row">
                    <audio src="@Model.recordingfilename" type="audio/mp3" controls="controls"/>
                </div>
    }
            </div>
        </div>
    </div>

        //Scorecard Start

        if (Model.scorecardgroups != null)
        {
            for (int j = 0; j < Model.scorecardgroups.Count; j++)
            {

                string groupname = "group" + j.ToString();
                string tablename = "table" + j.ToString();



        <div id="@groupname">

            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.scorecardgroups[j].groupname)
                    @Html.TextBoxFor(m => m.scorecardgroups[j].groupname, new { @class = "form-control", @readonly = "true" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(m => m.scorecardgroups[j].groupdescription)
                    @Html.TextBoxFor(m => m.scorecardgroups[j].groupdescription, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>
            <br />



            <table id="@tablename">
                <thead>
                    <tr>
                        <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().question)</th>

                        <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().answer)</th>
                  
                        <th>@Html.DisplayNameFor(m => m.scorecardgroups[j].scorecarditems.FirstOrDefault().comment)</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.scorecardgroups[j].scorecarditems.Count; i++)
                    {
                        <tr>
                            <td>
                                <input type="hidden" name="ScorecardItems.Index" value="@i">
                                @Html.TextBoxFor(m => m.scorecardgroups[j].scorecarditems[i].question, new { @class = "form-control", @readonly = "true" })
                            </td>
                     
                            <td>
                                @if (Model.scorecardgroups[j].scorecarditems[i].question == "Multiple Choice")
                                {
                                    @Html.DropDownListFor(m => m.scorecardgroups[j].scorecarditems[i].answer,Model.scorecardgroups[j].scorecarditems[i].possibleanswerslist, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.scorecardgroups[j].scorecarditems[i].possibleanswers)}
                                else
                                {


                                    @Html.RadioButtonFor(m => m.scorecardgroups[j].scorecarditems[i].answer, "Pass", new { id = "scorecardgroups["+j.ToString()+"].scorecarditems["+i.ToString()+"].answerPass" })
                                    <span>Pass</span>
                                    @Html.RadioButtonFor(m => m.scorecardgroups[j].scorecarditems[i].answer, "Fail", new { id = "scorecardgroups[" + j.ToString() + "].scorecarditems[" + i.ToString() + "].answerFail" })
                                    <span>Fail</span>
                                }
                            </td>
                         
                            <td>
                               
                            </td>

                            <td>
                                @Html.TextBoxFor(m => m.scorecardgroups[j].scorecarditems[i].comment, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.scorecardgroups[j].scorecarditems[i].comment)
                            </td>
                            <td>
                    
                            </td>
                        </tr>
                    }
    
                </tbody>
            </table>
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(m => m.scorecardgroups[j].comment)
                    @Html.TextBoxFor(m => m.scorecardgroups[j].comment, new { @class = "form-control" })
                </div>
                </div>
            </div>
                            <br />




                <hr />
                @Html.LabelFor(m => m.comment);
            @Html.TextBoxFor(m => m.comment, new { @class = "form-control"})
                
                <input type="submit" name="submit" class="btn" value="Save Scorecard" />

        }

    }

}

@*<script type="text/javascript">
$(function(){
$("#recording").on("change", function {
    $("#recordingfilename").val($(this).text());
 });
});
</script>*@
    
